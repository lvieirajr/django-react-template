version: "3.8"


# Defaults
x-defaults: &defaults
  restart: unless-stopped
  stdin_open: true
  tty: true

x-backend-defaults: &backend-defaults
  <<: *defaults
  build:
    context: ./backend/
    dockerfile: Dockerfile
    args:
      ENVIRONMENT: "development"
  image: django_react_template/backend:latest
  env_file:
    - ./backend/.env
  volumes:
    - ./backend/:/app/:rw,cached

x-frontend-defaults: &frontend-defaults
  <<: *defaults
  build:
    context: ./frontend/
    dockerfile: Dockerfile
    args:
      ENVIRONMENT: "development"
  image: django_react_template/frontend:latest
  env_file:
    - ./frontend/.env
  volumes:
    - ./frontend/:/app/:rw,cached
    - /app/dist/
    - /app/node_modules/


# Services
services:
  django:
    <<: *backend-defaults
    container_name: django
    command: ./bin/django-dev.sh
    ports:
      - "8000:8000"
    depends_on:
      celery:
        condition: service_started
      openfga:
        condition: service_started
      postgres:
        condition: service_started
      redis:
        condition: service_started

  celery:
    <<: *backend-defaults
    container_name: celery
    command: ./bin/celery-dev.sh
    depends_on:
      celerybeat:
        condition: service_started
      postgres:
        condition: service_started
      redis:
        condition: service_started

  celerybeat:
    <<: *backend-defaults
    container_name: celerybeat
    command: ./bin/celerybeat-dev.sh
    depends_on:
      redis:
        condition: service_started

  openfga:
    image: openfga/openfga:latest
    container_name: openfga
    restart: unless-stopped
    command: run
    environment:
      - OPENFGA_DATASTORE_ENGINE=postgres
      - OPENFGA_DATASTORE_URI=postgres://postgres:postgres@postgres:5432/postgres
      - OPENFGA_LOG_FORMAT=json
    ports:
      - "8080:8080"
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_started

  frontend:
    <<: *frontend-defaults
    container_name: frontend
    command: ./bin/dev.sh
    ports:
      - "8001:8001"

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres:/var/lib/postgresql/data/:rw,cached
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    volumes:
      - redis:/data/:rw,cached
    ports:
      - "6379:6379"

# Volumes
volumes:
  postgres:
  redis:
